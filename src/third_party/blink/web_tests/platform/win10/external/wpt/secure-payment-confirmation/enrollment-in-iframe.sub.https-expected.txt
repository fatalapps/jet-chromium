This is a testharness.js-based test.
[FAIL] SPC enrollment in cross-origin iframe
  promise_test: Unhandled rejection with value: "error: Action add_virtual_authenticator failed: invalid argument (400): invalid argument: Chrome only supports one internal authenticator per environment\\n  (Session info: chrome=140.0.7336.0)\\n\\nRemote-end stacktrace:\\n\\n\\tbase::debug::CollectStackTrace [0x0x7ff7983b64a5+21]\\n\\tbase::debug::StackTrace::StackTrace [0x0x7ff7983ae0dc+268]\\n\\tStatus::Status [0x0x7ff797acf8d9+249]\\n\\tinternal::ParseInspectorError [0x0x7ff797ab86ac+1436]\\n\\tDevToolsClientImpl::SendCommandInternal [0x0x7ff797ab6837+6055]\\n\\tDevToolsClientImpl::SendCommandAndGetResultWithTimeout [0x0x7ff797ab6b83+195]\\n\\tDevToolsClientImpl::SendCommandAndGetResult [0x0x7ff797ab6aab+43]\\n\\tWebViewImpl::SendCommandAndGetResult [0x0x7ff797ad5479+153]\\n\\tExecuteAddVirtualAuthenticator [0x0x7ff797b793f3+2051]\\n\\tbase::internal::Invoker<base::internal::FunctorTraits<Status (__cdecl*const & __ptr64)(Session * __ptr64,base::DictValue const & __ptr64,std::__Cr::unique_ptr<base::Value,std::__Cr::default_delete<base::Value> > * __ptr64)>,base::internal::BindState<0,1,0 [0x0x7ff797b56780+32]\\n\\tbase::RepeatingCallback<Status __cdecl(Session * __ptr64,base::DictValue const & __ptr64,std::__Cr::unique_ptr<base::Value,std::__Cr::default_delete<base::Value> > * __ptr64)>::Run [0x0x7ff797b1d2d1+193]\\n\\tExecuteWebAuthnCommand [0x0x7ff797b78b52+674]\\n\\tbase::internal::Invoker<base::internal::FunctorTraits<Status (__cdecl*const & __ptr64)(InitSessionParams const & __ptr64,Session * __ptr64,base::DictValue const & __ptr64,std::__Cr::unique_ptr<base::Value,std::__Cr::default_delete<base::Value> > * __ptr64 [0x0x7ff797b55d63+35]\\n\\tbase::RepeatingCallback<Status __cdecl(Session * __ptr64,base::DictValue const & __ptr64,std::__Cr::unique_ptr<base::Value,std::__Cr::default_delete<base::Value> > * __ptr64)>::Run [0x0x7ff797b1d2d1+193]\\n\\tExecuteSessionCommand [0x0x7ff797b1b956+1878]\\n\\tbase::internal::Invoker<base::internal::FunctorTraits<void (__cdecl*&& __ptr64)(char const * __ptr64,std::__Cr::basic_string<char,std::__Cr::char_traits<char>,std::__Cr::allocator<char> > const & __ptr64,base::RepeatingCallback<Status __cdecl(Session * __ [0x0x7ff797b1cddc+124]\\n\\tbase::OnceCallback<void __cdecl(void)>::Run [0x0x7ff797aad86d+141]\\n\\tbase::TaskAnnotator::RunTaskImpl [0x0x7ff7983194d4+340]\\n\\tbase::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWorkImpl [0x0x7ff79835b08b+2475]\\n\\tbase::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWork [0x0x7ff79835a3ea+394]\\n\\tbase::MessagePumpDefault::Run [0x0x7ff7983200cd+269]\\n\\tbase::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run [0x0x7ff79835c25d+957]\\n\\tbase::RunLoop::Run [0x0x7ff7983039cc+1164]\\n\\tbase::Thread::Run [0x0x7ff798397503+163]\\n\\tbase::Thread::ThreadMain [0x0x7ff79839793e+942]\\n\\tbase::internal::SetCurrentThreadTypeImpl [0x0x7ff7983cf3d4+1108]\\n\\tBaseThreadInitThunk [0x0x7ffaf6697374+20]\\n\\tRtlUserThreadStart [0x0x7ffaf7ffcc91+33]"
[FAIL] SPC enrollment in cross-origin iframe fails without user activation
  promise_test: Unhandled rejection with value: "error: Action add_virtual_authenticator failed: invalid argument (400): invalid argument: Chrome only supports one internal authenticator per environment\\n  (Session info: chrome=140.0.7336.0)\\n\\nRemote-end stacktrace:\\n\\n\\tbase::debug::CollectStackTrace [0x0x7ff7983b64a5+21]\\n\\tbase::debug::StackTrace::StackTrace [0x0x7ff7983ae0dc+268]\\n\\tStatus::Status [0x0x7ff797acf8d9+249]\\n\\tinternal::ParseInspectorError [0x0x7ff797ab86ac+1436]\\n\\tDevToolsClientImpl::SendCommandInternal [0x0x7ff797ab6837+6055]\\n\\tDevToolsClientImpl::SendCommandAndGetResultWithTimeout [0x0x7ff797ab6b83+195]\\n\\tDevToolsClientImpl::SendCommandAndGetResult [0x0x7ff797ab6aab+43]\\n\\tWebViewImpl::SendCommandAndGetResult [0x0x7ff797ad5479+153]\\n\\tExecuteAddVirtualAuthenticator [0x0x7ff797b793f3+2051]\\n\\tbase::internal::Invoker<base::internal::FunctorTraits<Status (__cdecl*const & __ptr64)(Session * __ptr64,base::DictValue const & __ptr64,std::__Cr::unique_ptr<base::Value,std::__Cr::default_delete<base::Value> > * __ptr64)>,base::internal::BindState<0,1,0 [0x0x7ff797b56780+32]\\n\\tbase::RepeatingCallback<Status __cdecl(Session * __ptr64,base::DictValue const & __ptr64,std::__Cr::unique_ptr<base::Value,std::__Cr::default_delete<base::Value> > * __ptr64)>::Run [0x0x7ff797b1d2d1+193]\\n\\tExecuteWebAuthnCommand [0x0x7ff797b78b52+674]\\n\\tbase::internal::Invoker<base::internal::FunctorTraits<Status (__cdecl*const & __ptr64)(InitSessionParams const & __ptr64,Session * __ptr64,base::DictValue const & __ptr64,std::__Cr::unique_ptr<base::Value,std::__Cr::default_delete<base::Value> > * __ptr64 [0x0x7ff797b55d63+35]\\n\\tbase::RepeatingCallback<Status __cdecl(Session * __ptr64,base::DictValue const & __ptr64,std::__Cr::unique_ptr<base::Value,std::__Cr::default_delete<base::Value> > * __ptr64)>::Run [0x0x7ff797b1d2d1+193]\\n\\tExecuteSessionCommand [0x0x7ff797b1b956+1878]\\n\\tbase::internal::Invoker<base::internal::FunctorTraits<void (__cdecl*&& __ptr64)(char const * __ptr64,std::__Cr::basic_string<char,std::__Cr::char_traits<char>,std::__Cr::allocator<char> > const & __ptr64,base::RepeatingCallback<Status __cdecl(Session * __ [0x0x7ff797b1cddc+124]\\n\\tbase::OnceCallback<void __cdecl(void)>::Run [0x0x7ff797aad86d+141]\\n\\tbase::TaskAnnotator::RunTaskImpl [0x0x7ff7983194d4+340]\\n\\tbase::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWorkImpl [0x0x7ff79835b08b+2475]\\n\\tbase::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWork [0x0x7ff79835a3ea+394]\\n\\tbase::MessagePumpDefault::Run [0x0x7ff7983200cd+269]\\n\\tbase::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run [0x0x7ff79835c25d+957]\\n\\tbase::RunLoop::Run [0x0x7ff7983039cc+1164]\\n\\tbase::Thread::Run [0x0x7ff798397503+163]\\n\\tbase::Thread::ThreadMain [0x0x7ff79839793e+942]\\n\\tbase::internal::SetCurrentThreadTypeImpl [0x0x7ff7983cf3d4+1108]\\n\\tBaseThreadInitThunk [0x0x7ffaf6697374+20]\\n\\tRtlUserThreadStart [0x0x7ffaf7ffcc91+33]"
[FAIL] SPC enrollment in cross-origin iframe without payment permission
  promise_test: Unhandled rejection with value: "error: Action add_virtual_authenticator failed: invalid argument (400): invalid argument: Chrome only supports one internal authenticator per environment\\n  (Session info: chrome=140.0.7336.0)\\n\\nRemote-end stacktrace:\\n\\n\\tbase::debug::CollectStackTrace [0x0x7ff7983b64a5+21]\\n\\tbase::debug::StackTrace::StackTrace [0x0x7ff7983ae0dc+268]\\n\\tStatus::Status [0x0x7ff797acf8d9+249]\\n\\tinternal::ParseInspectorError [0x0x7ff797ab86ac+1436]\\n\\tDevToolsClientImpl::SendCommandInternal [0x0x7ff797ab6837+6055]\\n\\tDevToolsClientImpl::SendCommandAndGetResultWithTimeout [0x0x7ff797ab6b83+195]\\n\\tDevToolsClientImpl::SendCommandAndGetResult [0x0x7ff797ab6aab+43]\\n\\tWebViewImpl::SendCommandAndGetResult [0x0x7ff797ad5479+153]\\n\\tExecuteAddVirtualAuthenticator [0x0x7ff797b793f3+2051]\\n\\tbase::internal::Invoker<base::internal::FunctorTraits<Status (__cdecl*const & __ptr64)(Session * __ptr64,base::DictValue const & __ptr64,std::__Cr::unique_ptr<base::Value,std::__Cr::default_delete<base::Value> > * __ptr64)>,base::internal::BindState<0,1,0 [0x0x7ff797b56780+32]\\n\\tbase::RepeatingCallback<Status __cdecl(Session * __ptr64,base::DictValue const & __ptr64,std::__Cr::unique_ptr<base::Value,std::__Cr::default_delete<base::Value> > * __ptr64)>::Run [0x0x7ff797b1d2d1+193]\\n\\tExecuteWebAuthnCommand [0x0x7ff797b78b52+674]\\n\\tbase::internal::Invoker<base::internal::FunctorTraits<Status (__cdecl*const & __ptr64)(InitSessionParams const & __ptr64,Session * __ptr64,base::DictValue const & __ptr64,std::__Cr::unique_ptr<base::Value,std::__Cr::default_delete<base::Value> > * __ptr64 [0x0x7ff797b55d63+35]\\n\\tbase::RepeatingCallback<Status __cdecl(Session * __ptr64,base::DictValue const & __ptr64,std::__Cr::unique_ptr<base::Value,std::__Cr::default_delete<base::Value> > * __ptr64)>::Run [0x0x7ff797b1d2d1+193]\\n\\tExecuteSessionCommand [0x0x7ff797b1b956+1878]\\n\\tbase::internal::Invoker<base::internal::FunctorTraits<void (__cdecl*&& __ptr64)(char const * __ptr64,std::__Cr::basic_string<char,std::__Cr::char_traits<char>,std::__Cr::allocator<char> > const & __ptr64,base::RepeatingCallback<Status __cdecl(Session * __ [0x0x7ff797b1cddc+124]\\n\\tbase::OnceCallback<void __cdecl(void)>::Run [0x0x7ff797aad86d+141]\\n\\tbase::TaskAnnotator::RunTaskImpl [0x0x7ff7983194d4+340]\\n\\tbase::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWorkImpl [0x0x7ff79835b08b+2475]\\n\\tbase::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWork [0x0x7ff79835a3ea+394]\\n\\tbase::MessagePumpDefault::Run [0x0x7ff7983200cd+269]\\n\\tbase::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run [0x0x7ff79835c25d+957]\\n\\tbase::RunLoop::Run [0x0x7ff7983039cc+1164]\\n\\tbase::Thread::Run [0x0x7ff798397503+163]\\n\\tbase::Thread::ThreadMain [0x0x7ff79839793e+942]\\n\\tbase::internal::SetCurrentThreadTypeImpl [0x0x7ff7983cf3d4+1108]\\n\\tBaseThreadInitThunk [0x0x7ffaf6697374+20]\\n\\tRtlUserThreadStart [0x0x7ffaf7ffcc91+33]"
Harness: the test ran to completion.


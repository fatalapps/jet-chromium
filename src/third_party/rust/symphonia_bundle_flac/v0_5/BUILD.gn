# Copyright 2023 The Chromium Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# @generated from third_party/rust/chromium_crates_io/BUILD.gn.hbs by
# tools/crates/gnrt.
# Do not edit!

import("//build/rust/cargo_crate.gni")

cargo_crate("lib") {
  crate_name = "symphonia_bundle_flac"
  epoch = "0.5"
  crate_type = "rlib"
  crate_root = "//third_party/rust/chromium_crates_io/vendor/symphonia-bundle-flac-v0_5/src/lib.rs"
  sources = [
    "//third_party/rust/chromium_crates_io/vendor/symphonia-bundle-flac-v0_5/src/decoder.rs",
    "//third_party/rust/chromium_crates_io/vendor/symphonia-bundle-flac-v0_5/src/demuxer.rs",
    "//third_party/rust/chromium_crates_io/vendor/symphonia-bundle-flac-v0_5/src/frame.rs",
    "//third_party/rust/chromium_crates_io/vendor/symphonia-bundle-flac-v0_5/src/lib.rs",
    "//third_party/rust/chromium_crates_io/vendor/symphonia-bundle-flac-v0_5/src/parser.rs",
    "//third_party/rust/chromium_crates_io/vendor/symphonia-bundle-flac-v0_5/src/validate.rs",
  ]
  inputs = []

  build_native_rust_unit_tests = false
  edition = "2018"
  cargo_pkg_authors = "Philip Deljanov <philip.deljanov@gmail.com>"
  cargo_pkg_name = "symphonia-bundle-flac"
  cargo_pkg_description =
      "Pure Rust FLAC demuxer and decoder (a part of project Symphonia)."
  cargo_pkg_repository = "https://github.com/pdeljanov/Symphonia"
  cargo_pkg_version = "0.5.4"

  allow_unsafe = false

  deps = [
    "//third_party/rust/log/v0_4:lib",
    "//third_party/rust/symphonia_core/v0_5:lib",
    "//third_party/rust/symphonia_metadata/v0_5:lib",
    "//third_party/rust/symphonia_utils_xiph/v0_5:lib",
  ]

  # Only for usage from third-party crates. Add the crate to
  # //third_party/rust/chromium_crates_io/Cargo.toml to use
  # it from first-party code.
  visibility = [ "//third_party/rust/*" ]

  #####################################################################
  # Tweaking which GN `config`s apply to this target.

  # Config changes that apply to all `//third_party/rust` crates.
  _configs_to_remove = [
    # We don't need code coverage data for any `chromium_crates_io` crates.
    "//build/config/coverage:default_coverage",

    # This is third-party code, so remove `chromium_code` config.  We are not
    # at the same time adding `//build/config/compiler:no_chromium_code`,
    # because 1) we don't want to pull how warnings are handled by that config
    # and 2) that config doesn't have any non-warnings-related stuff.
    "//build/config/compiler:chromium_code",
  ]
  _configs_to_add = []

  # Changing (if needed) which configs apply to this specific crate (based on
  # `extra_kv.configs_to_remove` and `extra_kv.configs_to_add` from
  # `gnrt_config.toml`).
  _configs_to_remove += []
  _configs_to_add += []

  # Applying config changes.
  library_configs -= _configs_to_remove
  library_configs += _configs_to_add
  executable_configs -= _configs_to_remove
  executable_configs += _configs_to_add
  proc_macro_configs -= _configs_to_remove
  proc_macro_configs += _configs_to_add
}

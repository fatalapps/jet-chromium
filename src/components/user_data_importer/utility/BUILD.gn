# Copyright 2025 The Chromium Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/zip.gni")
import("//build/rust/rust_static_library.gni")

source_set("safari_data_importer") {
  sources = [
    "bookmark_parser.cc",
    "bookmark_parser.h",
    "bookmark_util.cc",
    "bookmark_util.h",
    "history_callback_from_rust.h",
    "safari_data_import_client.h",
    "safari_data_importer.cc",
    "safari_data_importer.h",
  ]

  deps = [
    ":zip_ffi_glue",
    "//base",
    "//components/bookmarks/browser",
    "//components/favicon_base",
    "//components/history/core/browser",
    "//components/password_manager/core/browser/features:utils",
    "//components/password_manager/core/browser/import:importer",
    "//components/password_manager/core/browser/ui",
    "//components/reading_list/core",
    "//components/strings",
    "//components/user_data_importer/common",
  ]
}

rust_static_library("zip_ffi_glue") {
  allow_unsafe = true
  crate_root = "parsing_ffi/lib.rs"
  sources = [
    "parsing_ffi/history.rs",
    "parsing_ffi/json.rs",
    "parsing_ffi/lib.rs",
    "parsing_ffi/models.rs",
    "parsing_ffi/utils.rs",
    "parsing_ffi/zip_archive.rs",
  ]
  cxx_bindings = [ "parsing_ffi/lib.rs" ]
  visibility = [
    ":safari_data_importer",
    "//components/user_data_importer/content",
    "//components/user_data_importer/content:unit_tests",
  ]
  deps = [
    "//third_party/rust/anyhow/v1:lib",
    "//third_party/rust/serde/v1:lib",
    "//third_party/rust/serde_json_lenient/v0_2:lib",
    "//third_party/rust/zip/v4:lib",
  ]
}

copy("test_archive_files") {
  sources = [
    "//components/test/data/user_data_importer/Bookmarks.html",
    "//components/test/data/user_data_importer/History - Profile 2.json",
    "//components/test/data/user_data_importer/History.json",
    "//components/test/data/user_data_importer/Passwords.csv",
    "//components/test/data/user_data_importer/PaymentCards.json",
  ]
  outputs = [ "$target_out_dir/{{source_file_part}}" ]
}

zip("test_archive") {
  testonly = true
  output = "$root_out_dir/test_archive.zip"
  inputs = [
    "$target_out_dir/Bookmarks.html",
    "$target_out_dir/History.json",
    "$target_out_dir/History - Profile 2.json",
    "$target_out_dir/Passwords.csv",
    "$target_out_dir/PaymentCards.json",
  ]
  deps = [ ":test_archive_files" ]
}

if (is_ios) {
  bundle_data("test_archive_bundle_data") {
    testonly = true
    public_deps = [ ":test_archive" ]
    sources = [ "$root_out_dir/test_archive.zip" ]
    outputs = [ "{{bundle_resources_dir}}/{{source_file_part}}" ]
  }
}

source_set("unit_tests") {
  testonly = true
  sources = [ "safari_data_importer_unittest.cc" ]
  deps = [
    ":safari_data_importer",
    "//base",
    "//base/test:test_support",
    "//components/affiliations/core/browser:test_support",
    "//components/autofill/core/browser:test_support",
    "//components/bookmarks/browser",
    "//components/bookmarks/test",
    "//components/history/core/browser",
    "//components/history/core/test",
    "//components/password_manager/core/browser/features:utils",
    "//components/password_manager/core/browser/import:csv",
    "//components/password_manager/core/browser/import:importer",
    "//components/password_manager/core/browser/password_store:test_support",
    "//components/password_manager/core/browser/ui",
    "//components/password_manager/core/browser/ui:credential_ui_entry",
    "//components/password_manager/core/common:constants",
    "//components/reading_list/core:test_support",
    "//components/sync:test_support",
    "//components/user_data_importer/mojom",
    "//mojo/public/cpp/bindings",
    "//testing/gmock",
    "//testing/gtest",
  ]

  if (is_ios) {
    public_deps = [ "//components/user_data_importer/ios" ]
    deps += [
      ":test_archive_bundle_data",
      "//components/password_manager/services/csv_password/ios:fake_password_parser_service",
    ]
  } else {
    data_deps = [ ":test_archive" ]
    deps += [
      "//components/password_manager/services/csv_password:fake_password_parser_service",
      "//components/user_data_importer/content",
      "//components/user_data_importer/content:test_support",
      "//content/test:test_support",
    ]
  }

  # TODO(crbug.com/40031409): Fix code that adds exit-time destructors and
  # enable the diagnostic by removing this line.
  configs += [ "//build/config/compiler:no_exit_time_destructors" ]
}
